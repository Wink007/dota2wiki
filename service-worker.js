"use strict";var precacheConfig=[["/dota2wiki/index.html","3b1fa59f23ef67095d7fa75175b05ec3"],["/dota2wiki/static/css/main.aaec34ff.css","3cf3f643fca7fe006e6f1092dee46a40"],["/dota2wiki/static/media/1.432657f6.png","432657f69762129e34a63f2da0b7ad79"],["/dota2wiki/static/media/22.0a6729d3.png","0a6729d3e5f69b6ae50facef7e51f7df"],["/dota2wiki/static/media/3.2b97fcc0.png","2b97fcc0782aa50caf25687780d3ed12"],["/dota2wiki/static/media/Main_Shop.e720f2a8.png","e720f2a8e53d7a4d1ddaf0bd019d4899"],["/dota2wiki/static/media/Secret_Shop.17e1c110.png","17e1c1101c33a2dc095e2b15db5081c8"],["/dota2wiki/static/media/Side_Lane_Shop.47d3e3e1.png","47d3e3e172d859688610c98699bbefb4"],["/dota2wiki/static/media/aghanim_skill.6129b43b.png","6129b43b57e861d9b06853372ca3e489"],["/dota2wiki/static/media/agility.99df3e0f.png","99df3e0fbe83b49a9cb5c9c4fc51b7c5"],["/dota2wiki/static/media/am.3d7b2750.png","3d7b275070aeeeac7f1603d2ca1389b5"],["/dota2wiki/static/media/dota2main.245ced4a.png","245ced4ac2e74544bd3adb8faf1fdd91"],["/dota2wiki/static/media/gold.1e010ed4.png","1e010ed4b26e6a076fb78bbcbf571474"],["/dota2wiki/static/media/int.b208f91f.png","b208f91fb315bdf6230d8fc4077efba0"],["/dota2wiki/static/media/lich.29539c00.png","29539c002646bdfd6bc8ce3756283d69"],["/dota2wiki/static/media/minimap.2b47cf97.png","2b47cf97f4b044ac2a02a3e7bfff4def"],["/dota2wiki/static/media/minimap_all.42437965.png","4243796536230cbe66258a94350b97d9"],["/dota2wiki/static/media/pa.6c2efcf0.png","6c2efcf03c7eb9526b8e1a34f2e64294"],["/dota2wiki/static/media/str.8cebaad0.png","8cebaad00863323b75604ded26c0a115"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var i=new URL(e);return n&&i.pathname.match(n)||(i.search+=(i.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),i.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),i=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),i]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var i="/dota2wiki/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(i,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});